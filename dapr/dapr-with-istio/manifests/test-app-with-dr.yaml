---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: dapr-with-dr-demo
  name: dapr-with-dr-demo
---
kind: Service
apiVersion: v1
metadata:
  name: nodeapp-with-dr
  namespace: dapr-with-dr-demo
  labels:
    app: node
spec:
  selector:
    app: node
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodeapp-with-dr
  namespace: dapr-with-dr-demo
  labels:
    app: node
spec:
  replicas: 1
  selector:
    matchLabels:
      app: node
  template:
    metadata:
      labels:
        app: node
      annotations:
        dapr.io/enabled: "true"
        dapr.io/id: "nodeapp-with-dr"
        dapr.io/port: "3000"
    spec:
      containers:
      - name: node
        image: dapriosamples/hello-k8s-node:edge
        ports:
        - containerPort: 3000
        imagePullPolicy: Always
---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: pythonapp-with-dr
#  namespace: dapr-with-dr-demo
#  labels:
#    app: python
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: python
#  template:
#    metadata:
#      labels:
#        app: python
#      annotations:
#        dapr.io/enabled: "true"
#        dapr.io/id: "pythonapp-with-dr"
#        traffic.sidecar.istio.io/excludeOutboundPorts: "3500"
#        traffic.sidecar.istio.io/excludeInboundPorts: "3500"
#    spec:
#      containers:
#      - name: python
#        image: dapriosamples/hello-k8s-python:edge
---
apiVersion: gateway.kyma-project.io/v1alpha1
kind: APIRule
metadata:
  labels:
    app: node
  name: nodeapp-with-dr
  namespace: dapr-with-dr-demo
spec:
  service:
    host: nodeapp-with-dr
    name: nodeapp-with-dr
    port: 3000
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  rules:
    - path: /.*
      methods: ["GET"]
      accessStrategies:
        - handler: allow
      mutators: []
